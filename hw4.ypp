%{
	//#include "hw4_bison.hpp"
	#include "output.hpp"
	//#include "SymTable.h"
	
	using namespace std;
	using namespace output;

	extern int yylex();
	extern int yylineno;
	
	void yyerror(const char*);

	//list<YYSTYPE> variableList;
	//list<YYSTYPE> vectorList;
	//list<list <YYSTYPE> > matrixList;
	//int vector_size;
	//SymTable table;
	
%}


%token LP RP LC RC SC CELSIUS FAHRENHEIT KELVIN INT PRINT INPUT ID STRING TRUE FALSE BOOL IF ELSE WHILE BREAK NUM SWITCH CASE COLON	

%nonassoc IFX
%nonassoc ELSE
%right ASSIGN
%left OR
%left AND
%left EQ_OP
%left REL_OP
%left PLUS MINUS
%left MULT DIV
%right NOT

%%   


stmts	:  	stmt aux
aux		: 	stmt aux
			|
stmt	: 	LC stmts RC		
			| Type ID SC
			| ID ASSIGN Exp SC
			| PRINT ID SC
			| PRINT STRING SC
			| INPUT ID SC
			| IF LP Exp RP stmt %prec IFX
			| IF LP Exp RP stmt ELSE stmt 
			| WHILE LP Exp RP stmt
			| BREAK SC
			| SWITCH LP Exp RP LC CasesList RC
		
CasesList : CaseStat CasesList
			| CaseStat
			
CaseStat  : CASE NUM TempType COLON stmt BREAK SC

TempType  : CELSIUS
			| FAHRENHEIT
			| KELVIN
			
Type	  : TempType
			| INT
			| BOOL
			
Exp		  : LP Exp RP
			| Exp PLUS Exp
			| Exp MINUS Exp
			| Exp MULT Exp
			| Exp DIV Exp
			| ID
			| NUM
			| NUM TempType
			| TRUE
			| FALSE
			| NOT Exp
			| Exp OR Exp
			| Exp AND Exp
			| Exp REL_OP Exp
			| Exp EQ_OP Exp
			

%%

void yyerror(const char*){
	errorSyn(yylineno);
	exit(1);
}

int main() {
	return yyparse();
}
